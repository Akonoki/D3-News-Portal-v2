py manage.py makemigrations
py manage.py migrate
py manage.py shell

from news.models import *
u1 = User.objects.create_user(username = 'Vlad')
u2 = User.objects.create_user(username = 'Masha')
Author.objects.create(user_relation = u1)
Author.objects.create(user_relation = u2)
Category.objects.create(name='IT')
Category.objects.create(name='photo')
Category.objects.create(name='politics')
Category.objects.create(name='technology')

author = Author.objects.get(id=1)
Post.objects.create(author_relation=author, category_type='AR', title = 'sometitle about IT', text = 'somebigtext about IT')
Post.objects.create(author_relation=author, category_type='AR', title = 'sometitle about photo', text = 'somebigtext about photo')
Post.objects.create(author_relation=author, category_type='NW', title = 'sometitle about politics', text = 'somebigtext about politics')

Post.objects.get(id=2).post_category_relation.add(Category.objects.get(id=1))
Post.objects.get(id=2).post_category_relation.add(Category.objects.get(id=2))
Post.objects.get(id=1).post_category_relation.add(Category.objects.get(id=1))
Post.objects.get(id=3).post_category_relation.add(Category.objects.get(id=1))

Comment.objects.create(post_relation=Post.objects.get(id=1), user_relation = Author.objects.get(id=1).user_relation, text = 'somecommenttext')
Comment.objects.create(post_relation=Post.objects.get(id=2), user_relation = Author.objects.get(id=1).user_relation, text = 'somecommenttext')
Comment.objects.create(post_relation=Post.objects.get(id=3), user_relation = Author.objects.get(id=2).user_relation, text = 'somecommenttext')
Comment.objects.create(post_relation=Post.objects.get(id=1), user_relation = Author.objects.get(id=2).user_relation, text = 'best comment text')

Comment.objects.get(id=1).like()
Comment.objects.get(id=2).like()
Comment.objects.get(id=3).dislike()
Comment.objects.get(id=2).like()

a = Author.objects.get(id=1)
a.update_rating()
a.ratingAuthor

best = Author.objects.all().order_by('-ratingAuthor').values('user_relation', 'ratingAuthor')
best
best_post = Post.objects.all().order_by('-rating').values('time_creation', 'rating', 'title', 'author_relation')[0]
preview_best_post = Post.objects.get(id=1).preview()
print(f'{best_post}, {preview_best_post}')

post.comment_set.all().values('timeCreation', 'user_relation', 'rating', 'text')
